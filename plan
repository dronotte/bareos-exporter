Необходимо написать экспортер для бареоса.

Что он должен собирать:
  Количество невыполненных задач
  Невыполненные задачи (наименования)

Как он это будет делать?
Подключаться к базе данных (у меня используется постгра, в дальнейшем будем добавлять другие Р-СУБД)
Выполнять запросы:
  1.Для вывода количества за последний день
  select count(JobId) as failed_jobs from public.Job where JobErrors != 0 and JobStatus != 'A' and Name != 'RestoreFiles' and StartTime >= (now() - interval '1 day');
  2.Для вывода их поименно (название файла задачи, название задачи, время начала задачи)
  select job,name,starttime from public.Job where JobErrors != 0 and JobStatus != 'A' and Name != 'RestoreFiles' and StartTime >= (now() - interval '1 day');

Затем экспортирует их в веб

А теперь подумаем, как работают метрики

Оповещение должно происходить так:
$name failed

Приходит один раз.


(2) выводит словарь: {$job:($name:$starttime),$job:($name:$starttime)}
$job - будет выполнять роль id. $name используем в алерте.
Prometheus сравнивает значение этой метрики, и, если появляется новое значение, запускает алерт.


План работ:

1. Написать подключение к бд с передачей туда переменных для подключения с помощью конфигурационного файла (вызывать его будем из основной программы)
  Запросы передаем туда из основной программы. Этот файл (postgres.py) используем только как подключение.

2. Написать программу сбора метрик.
  Здесь опишем методы, позволяющие пользователю добавлять свои метрики с помощью конф. файла .yaml
    Что касается yaml
      a: 1
      b:
        c: 3
        d: 4
    Выдаст нам
      a: 1
      b: {c: 3, d: 4}
  Обговорим структуру:

config.yaml
<
connection:
  db_name: bareos
  db_host: 192.168.100.104
  db_password: aY78kgvoftQ2sk
  db_user: exporter
  db_port: 5432

metrics:
  - metric_name: failed_number
    type: gauge
    help: "The number of failed jobs"
    values:
      - failed_jobs
    query:
      select count(JobId) as failed_jobs from public.Job where JobErrors != 0 and JobStatus != 'A' and Name != 'RestoreFiles' and StartTime >= (now() - interval '>
  - metric_name: failed_names
    type: gauge
    help: "The names of failed jobs"
    values:
      - failed_jobs
    query:
      select name from public.Job where JobErrors != 0 and JobStatus != 'A' and Name != 'RestoreFiles' and StartTime >= (now() - interval '1 day');
>

3. Написать алерты.
